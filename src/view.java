/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fproject;

import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Comparator;


/**
 *
 * @author malak
 */
public class view extends javax.swing.JFrame {

    /**
     * Creates new form view
     */
    public view() {
        initComponents();
        this.setLocationRelativeTo(null);
        user();
        sort();
        
     // sortcombobox.addActionListener();
    }
public void user(){
                String selected = (String) sortcombobox.getSelectedItem();
          ArrayList<Account> aa = Account.getarray(); // Get the list of accounts
                int s = aa.size();
        DefaultTableModel m = (DefaultTableModel) viewtable.getModel();
                m.setRowCount(0); // Clear existing rows
                for (int i = 0; i < s; i++) {
                    // Add sorted rows to the table model
                    m.addRow(new Object[]{
                            aa.get(i).getAccnum(),
                            aa.get(i).getName(),
                            aa.get(i).getMail(),
                            aa.get(i).getBalance(),
                            aa.get(i).getMobnum(),
                            aa.get(i).getDate(),
                            aa.get(i).getState()
                    });}}
    public void sort() {
         
         sortcombobox.addActionListener(new ActionListener() {   
            @Override
            public void actionPerformed(ActionEvent e) {
               
                String selected = (String) sortcombobox.getSelectedItem();
          ArrayList<Account> aa = Account.getarray(); // Get the list of accounts
                int s = aa.size();
        DefaultTableModel m = (DefaultTableModel) viewtable.getModel();
                m.setRowCount(0); // Clear existing rows
                for (int i = 0; i < s; i++) {
                    // Add sorted rows to the table model
                    m.addRow(new Object[]{
                            aa.get(i).getAccnum(),
                            aa.get(i).getName(),
                            aa.get(i).getMail(),
                            aa.get(i).getBalance(),
                            aa.get(i).getMobnum(),
                            aa.get(i).getDate(),
                            aa.get(i).getState()
                    });
                }if (selected.equals("Name")) {
                    aa.sort(Comparator.comparing(Account::getName));
                } else if (selected.equals("Date")) {
            
                    aa.sort(Comparator.comparing(Account::getParsedDate)); // Ensure Account::getDate returns a date type
                } else if (selected.equals("Balance")) {
                    aa.sort(Comparator.comparing(Account::getdoublebalance)); // Ensure Account::getBalance returns a numeric type
                }
                 else if (selected.equals("None")) {
                    user();
                }
               m.setRowCount(0); // Clear existing rows
                for (int i = 0; i < s; i++) {
                    // Add sorted rows to the table model
                    m.addRow(new Object[]{
                            aa.get(i).getAccnum(),
                            aa.get(i).getName(),
                            aa.get(i).getMail(),
                            aa.get(i).getBalance(),
                            aa.get(i).getMobnum(),
                            aa.get(i).getDate(),
                            aa.get(i).getState()
                    });
                }
            }
        });  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        backtohome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        sortcombobox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backtohome.setText("Back to home");
        backtohome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtohomeActionPerformed(evt);
            }
        });

        viewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Account Number", "Name", "Email", "Balance", "Mobile Number", "Date opened", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewtable.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(viewtable);

        jLabel1.setText("Sort by:");

        sortcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Name", "Balance", "Date" }));
        sortcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortcomboboxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("View Accounts");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backtohome)
                .addGap(31, 31, 31))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sortcombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(184, 184, 184))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sortcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backtohome)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backtohomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtohomeActionPerformed
        new home().setVisible(true);
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_backtohomeActionPerformed

       
    


    
    private void sortcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortcomboboxActionPerformed
        //  String a = sortcombobox.getSelectedItem();// TODO add your handling code here:

    }//GEN-LAST:event_sortcomboboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backtohome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private javax.swing.JComboBox<String> sortcombobox;
    private javax.swing.JTable viewtable;
    // End of variables declaration//GEN-END:variables
}
